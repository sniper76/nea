<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="privtCounsel">



	<!-- 직업훈련 신청조건 -->
	<sql id="whereEduTrnngNeaCond">
		WHERE A.USER_SEQ = #{condUserSeq}
		AND A.DEL_YN = 'N'
		AND B.DEL_YN = 'N'
		AND B.USE_YN = 'Y'
		AND B.EDU_DIV_CD = 'EDC0000000001'
		AND B.RECRUMT_STS_CD IN ('RSC0000000002','RSC0000000003')
		AND D.DEL_YN = 'N'

		<choose>
			<when test="condText != null and !condText.equals('')">
				<choose>
		   			<when test="condType != null and condType.equals('EDU_NM')"><!-- 직업훈련명 -->
		   				AND B.EDU_TRNNG_NM LIKE CONCAT('%',#{condText},'%')
					</when>
					<when test="condType != null and condType.equals('TEACHER_NM')"><!-- 강사명-->
						AND (
							C.TEACHER_NM_1 LIKE CONCAT('%',#{condText},'%') OR
							C.TEACHER_NM_2 LIKE CONCAT('%',#{condText},'%')
						)
					</when>
					<otherwise>
						AND (
							B.EDU_TRNNG_NM LIKE CONCAT('%',#{condText},'%') OR
							C.TEACHER_NM_1 LIKE CONCAT('%',#{condText},'%') OR
							C.TEACHER_NM_2 LIKE CONCAT('%',#{condText},'%')
						)
					</otherwise>
				</choose>
			</when>
		</choose>
	</sql>



 	<!-- 직업훈련 신청 목록 count,education tranning nea list count -->
	<select id="selectEduTrnngNeaListCnt" resultType="java.lang.Integer" parameterType="ony.cpes.external.mypage.privt.bean.CondCounselBean">
        <![CDATA[
        	/*privtCounsel.selectEduTrnngNeaListCnt*/
            SELECT
            	 COUNT(1) AS CNT
            FROM CPES_EDU_TRNNG_USER A
			INNER JOIN CPES_EDU_TRNNG B
			ON A.EDU_TRNNG_SEQ = B.EDU_TRNNG_SEQ
			INNER JOIN CPES_EDU_TRNNG_SUB C
			ON B.EDU_TRNNG_SEQ = C.EDU_TRNNG_SEQ
			INNER JOIN CPES_INSTT D
			ON B.INSTT_SEQ = D.INSTT_SEQ
       ]]>
            <include refid="whereEduTrnngNeaCond"/>

    </select>

    <!-- 직업훈련 신청 목록 count,education tranning nea list count -->
	<select id="selectEduTrnngNeaList" resultType="ony.cpes.external.mypage.privt.bean.EduTrnngBean" parameterType="ony.cpes.external.mypage.privt.bean.CondCounselBean">
        <![CDATA[
        	/*privtCounsel.selectEduTrnngNeaList*/
            SELECT
            	 A.EDU_TRNNG_SEQ,
            	 A.USER_SEQ,
            	 A.CANCEL_YN,
            	 A.DEL_YN,
            	 B.EDU_TRNNG_NM,
            	 FN_GET_ADDR_NM(SUBSTR(B.ADDR_FULL_CD,1,3), '2', #{langCd}) AS ADDR_NM,
            	 B.RECRUMT_STS_CD,
            	 FN_GET_COMMON_NM('RECRUMT_STS_CD', B.RECRUMT_STS_CD, #{langCd}) AS RECRUMT_STS_NM,
            	 B.NEA_EDU_DIV_CD,
            	 FN_GET_COMMON_NM('NEA_EDU_DIV_CD', B.NEA_EDU_DIV_CD, #{langCd}) AS NEA_EDU_DIV_NM,
            	 C.RECRUMT_MEMB,
            	 FN_GET_BASE_DATE_CHAR(C.TEACH_DT, #{langCd}) AS TEACH_DT,
            	 CONCAT(C.TEACH_BGN_HOUR, ':', C.TEACH_BGN_MINUTE, ' ', C.TEACH_BGN_AMPM) AS TEACH_BGN_TIME,
            	 CONCAT(C.TEACH_END_HOUR, ':', C.TEACH_END_MINUTE, ' ', C.TEACH_END_AMPM) AS TEACH_END_TIME,
            	 C.TEACHER_NM_1,
            	 C.TEACHER_NM_2,
            	 FN_GET_NEW_YN(A.REG_DT) AS NEW_YN
            FROM CPES_EDU_TRNNG_USER A
			INNER JOIN CPES_EDU_TRNNG B
			ON A.EDU_TRNNG_SEQ = B.EDU_TRNNG_SEQ
			INNER JOIN CPES_EDU_TRNNG_SUB C
			ON B.EDU_TRNNG_SEQ = C.EDU_TRNNG_SEQ
			INNER JOIN CPES_INSTT D
			ON B.INSTT_SEQ = D.INSTT_SEQ

       ]]>
            <include refid="whereEduTrnngNeaCond"/>
            ORDER BY A.REG_DT DESC
			LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
    </select>

</mapper>
