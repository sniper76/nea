<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans.xsd
                                 http://www.springframework.org/schema/security
                                 http://www.springframework.org/schema/security/spring-security.xsd
                                 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

        <!-- Caution : this below config for the Security -->

        <http auto-config="true" use-expressions="true">

        	<intercept-url pattern="/cpes/users/**" access="hasRole('ROLE_USER')" />
        	<intercept-url pattern="/cpes/trnct/**" access="hasRole('ROLE_TRNCT')" />
        	<intercept-url pattern="/cpes/compny/**" access="hasRole('ROLE_CMPNY')" />
        	<intercept-url pattern="/cpes/stdit/**" access="hasRole('ROLE_STDIT')" />
        	<intercept-url pattern="/cpes/private/**" access="hasAnyRole('ROLE_USER,ROLE_STDIT')" />
        	<intercept-url pattern="/cpes/all/**"  access="hasAnyRole('ROLE_USER,ROLE_TRNCT,ROLE_CMPNY,ROLE_STDIT')" />
        	<intercept-url pattern="/cpes/**" access="hasAnyRole('ROLE_USER,ROLE_TRNCT,ROLE_CMPNY,ROLE_STDIT')" />
        	<intercept-url pattern="/**" access="permitAll" />


            <form-login
            	  login-page="/login.do"
                  username-parameter="userEmail"
                  password-parameter="password"
                  login-processing-url="/loginProcess.do"
                  authentication-failure-handler-ref="customLoginFailHandler"
				  authentication-success-handler-ref="customLoginSuccessHandler"
                  always-use-default-target='true'
            />

			<access-denied-handler error-page="/common/accessDeniedPage.do" />

			<logout
		        logout-url="/logout.do"
		        logout-success-url="/login.do"
		        invalidate-session = "true"
		    />

		    <csrf disabled="true"/>

			<!--
				ckeditor 이미지 업로드를 위해 추가

				deny : 같은 사이트 내에서 frame을 통한 접근도 막습니다.
				sameorigin : frame에 포함된 페이지가 페이지를 제공하는 사이트와 동일한 경우 계속 사용가능합니다.
			 -->
		    <headers>
		        <frame-options policy="SAMEORIGIN"/>
		    </headers>

		<!-- 	<session-management invalid-session-url="/login.do">
        		<concurrency-control max-sessions="1" expired-url="/login.do"/>
    		</session-management> -->





        </http>


        <authentication-manager>
        	<authentication-provider ref="customUserAuthProvider"/>
		    <authentication-provider user-service-ref="customUserDetailsService">
		    </authentication-provider>
		</authentication-manager>

		<beans:bean id="customUserDetailsService" 	class="ony.cpes.external.login.service.CustomUserDetailsService" />
		<beans:bean id="customUserAuthProvider" 	class="ony.cpes.external.login.service.CustomAuthenticationProvider"/>

        <beans:bean id="customLoginFailHandler" class="ony.cmm.common.handler.CustomLoginFailHandler">
        	<beans:property name="userEmailname" value="userEmail"/>
		    <beans:property name="passwordname" value="password"/>
		    <beans:property name="errormsgname" value="ERRORMSG"/>
		    <beans:property name="defaultFailureUrl" value="/login.do?error"/>
		</beans:bean>

		<beans:bean id="customLoginSuccessHandler" class="ony.cmm.common.handler.CustomLoginSuccessHandler">
			<beans:property name="userEmailname" value="userEmail"/>
		    <beans:property name="passwordname" value="password"/>
		    <beans:property name="defaultUrl" value="/internal/index.do"></beans:property>
		</beans:bean>

</beans:beans>